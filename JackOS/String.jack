// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack
/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field Array str;
    field int len, maxlen;
    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
        let len = 0;
        let maxlen = maxLength;
        let str = Memory.alloc(Math.max(1, maxLength));
        return this;
    }

    /** Disposes this string. */
    method void dispose() {
        do str.dispose();
        do Memory.deAlloc(this);
        return;
    }

    /** Returns the current length of this string. */
    method int length() {
        return len;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        return str[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        let str[j] = c;
        return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
        let str[len] = c;
        let len = len + 1;
        return this;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
        let len = len - 1;
        return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
        var int i;
        var int ret;
        var char c;
        var boolean isNeg;
        let i = 0;
        let ret = 0;
        let isNeg = false;
        if (str[0] = 45)
        {
            let isNeg = true;
            let i = i + 1;
        }

        while (i < len)
        {
            let c = str[i];
            if ((c < 48) | (c > 57))
            {
                let i = len;
            }
            else
            {
                let ret = (ret * 10) + (c - 48);
            }
            let i = i + 1;
        }

        if (isNeg)
        {
            return -ret;
        }

        return ret;
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        var int lastDigit;
        var int absVal;
        var int i;
        var int c;

        let len = 0;
        let absVal = Math.abs(val);

        let i = 0;
        let lastDigit = absVal - ((absVal / 10) * 10);
        let c = lastDigit + 48;

        if ((absVal < 10))
        {
            if (val < 0)
            {
                do appendChar(45);
            }
            do appendChar(c);
            return;
        }
        else
        {
            do setInt(val / 10);
            do appendChar(c);
        }

        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
